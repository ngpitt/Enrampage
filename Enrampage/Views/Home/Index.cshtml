@{
    ViewBag.Title = "Enrampage";
}

@section scripts {
    <script>
        var Page = 0;
        var AllRantsShown = false;
        var Tags = [];

        $('#tags').tagsinput({
            tagClass: 'tag label label-danger',
            trimValue: true,
            typeahead: {
                afterSelect: function (Value)
                {
                    this.$element.val(null);
                },
                source: function (Query)
                {
                    return Tags;
                }
            }
        });

        $(function ()
        {
            LoadTags();
            LoadRants();
        });

        $(window).scroll(function ()
        {
            if ($(window).scrollTop() + $(window).height() > $(document).height() - 100 && !AllRantsShown)
            {
                Page++;
                LoadRants();
            }
        });

        $('#tags').on('itemAdded', TagsChanged).on('itemRemoved', TagsChanged)

        $('#post-rant').click(function ()
        {
            if ($('#tags').tagsinput('items').length === 0 || $('#rant-area').val() === '')
            {
                ShowError('Both tags and text are required.');
                return;
            }

            SetControlsDisabled(true);
            PostJson('@Url.HttpRouteUrl("DefaultApi", new { action = "PostRant" })',
                { Text: $('#rant-area').val(), Tags: $('#tags').tagsinput('items') },
                function (Payload)
                {
                    var rant = RantFromJson(Payload);

                    $('#placeholder').slideUp('slow');
                    $('#rant-area').val(null);
                    SetControlsDisabled(false);
                    rant.hide();
                    $('#rants').prepend(rant);
                    rant.slideDown('slow');
                });
        });

        function LoadTags()
        {
            PostJson('@Url.HttpRouteUrl("DefaultApi", new { action = "GetTags" })',
                null,
                function (Payload)
                {
                    Tags = Payload;
                });
        }

        function LoadRants()
        {
            $('#placeholder').show().slideUp('slow');
            $('#loading').show();
            PostJson('@Url.HttpRouteUrl("DefaultApi", new { action = "GetRants" })',
                { Number: Page, Tags: $('#tags').tagsinput('items') },
                function (Payload)
                {
                    $('#loading').hide();

                    if (Payload.length === 0)
                    {
                        $('#placeholder').slideDown('slow');
                    }
                    else
                    {
                        $.each(Payload, function ()
                        {
                            var rant = RantFromJson(this);

                            rant.hide();
                            $('#rants').append(rant);
                            rant.slideDown("slow");
                        });
                    }

                    AllRantsShown = Payload.length != 10;
                });
        }

        function TagsChanged()
        {
            $('#rants .rant').slideUp('slow', function ()
            {
                $(this).remove();
            });
            Page = 0;
            LoadRants();
        }

        function PostJson(Url, Data, Success)
        {
            $.ajax(Url, {
                type: 'POST',
                data: JSON.stringify(Data),
                contentType: 'application/json',
                dataType: 'json',
                success: function (Response)
                {
                    if (Response.Success)
                    {
                        Success(Response.Payload);
                    }
                    else
                    {
                        ShowError(Response.Message)
                    }
                },
                error: function ()
                {
                    ShowError('Check your network connection.');
                }
            });
        }

        function RantFromJson(Rant)
        {
            var rant = $('#templates .rant').clone();

            rant.find('.panel-title').text(Rant.Created);
            $.each(Rant.Tags, function ()
            {
                var tag = rant.find('.tag').first().clone();

                tag.text(this);
                rant.find('.panel-heading').append(tag);
            });
            rant.find('.tag').first().remove();
            rant.find('.panel-body').text(Rant.Text);

            return rant;
        }

        function SetControlsDisabled(Value)
        {
            $('#post-rant').prop('disabled', Value);
            $('#rant-area').prop('disabled', Value);
            $('#tags').prop('diabled', Value);
        }

        function ShowError(Message)
        {
            $('#error').slideUp('slow');
            $('#error .message').text(Message + ' Guess this isn\'t your day :\'-(');
            $('#error').slideDown('slow').delay(5000).slideUp('slow');
            window.scrollTo(0, 0);
        }
    </script>
}

<div class="alert alert-danger" id="error" role="alert">
    <strong>Error!</strong> <span class="message"></span>
</div>
<div id="new-rant">
    <div class="form-group input-group">
        <span class="input-group-addon">Tags</span>
        <input type="text" class="form-control" id="tags" />
    </div>
    <div class="form-group">
        <textarea class="form-control" id="rant-area" rows="5"></textarea>
        <button type="button" class="btn btn-sm btn-danger" id="post-rant">Fuck it, I'm done.</button>
    </div>
</div>
<div id="rants">
</div>
<div id="loading">
    <i class="spinner fa fa-spinner fa-spin fa-3x"></i>
</div>
<div id="placeholder">
    Of course you had to pick a tag that no one's used before. Fuck'in hipster.
</div>
<div id="templates">
    <div class="rant panel panel-default">
        <div class="panel-heading">
            <h3 class="panel-title"></h3>
            <button type="button" class="tag btn btn-xs btn-danger" onclick="$('#tags').tagsinput('add', $(this).text());"></button>
        </div>
        <div class="panel-body">
        </div>
    </div>
</div>